{"version":3,"sources":["logo.svg","Components/home.js","Components/card.js","actions/delete.js","Components/tasksbar.js","Components/title.js","classes/taskobj.js","actions/add.js","App.js","serviceWorker.js","reducers/deleteReducer.js","index.js","localstorage.js"],"names":["module","exports","new_title","new_desc","Taskcard","handleDelete","taskTitle","props","deleteTask","AlertDialog","title","React","useState","open","setOpen","handleClose3","IconButton","aria-label","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","Card","className","CardActionArea","CardContent","Typography","gutterBottom","variant","component","this","data","taskDesc","CardActions","Component","connect","dispatch","type","deleteTasks","Tasksbar","tasks","console","log","existingTasks","map","ele","key","_id","state","Title","new_tasks","tt","td","Home","FormDialog","handleClose","Fab","TextField","margin","label","fullWidth","document","getElementById","value","nt","addTask","taskObj","addTasks","content","addTaskAction","App","exact","path","Boolean","window","location","hostname","match","initState","taskType","deletereducer","action","newTasks","filter","task","astore","createStore","subscribe","serializedState","JSON","stringify","localStorage","setItem","saveState","getState","ReactDOM","render","StrictMode","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c149516e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component, Fragment } from \"react\";\nimport Tasksbar from \"./tasksbar\";\nimport Title from \"./title\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { connect } from \"react-redux\";\nimport { addTaskAction } from \"../actions/add\";\nimport { new_tasks } from \"../classes/taskobj\";\n\n// import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nvar new_title, new_desc;\n\nclass Home extends Component {\n  FormDialog = () => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleClose2 = () => {\n      new_title = document.getElementById(\"title\").value;\n      new_desc = document.getElementById(\"details\").value;\n\n      var nt = new new_tasks(new_title, new_desc);\n\n      this.addTask(nt);\n      handleClose();\n    };\n\n    return (\n      <div>\n        <div className=\"float\">\n          <Fab color=\"primary\" aria-label=\"add\" onClick={handleClickOpen}>\n            <AddIcon />\n          </Fab>\n        </div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            Enter Task title and details\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Enter task you want to perform. Make sure all the task titles are unique\n            </DialogContentText>\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"title\"\n              type=\"text\"\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"details\"\n              label=\"details\"\n              type=\"text\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleClose2} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  };\n\n  addTask = (taskObj) => {\n    this.props.addTasks(taskObj);\n  };\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container1\">\n          <Title />\n          <Tasksbar />\n        </div>\n        <this.FormDialog></this.FormDialog>\n      </Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTasks: (taskObj) => {\n      dispatch(addTaskAction(taskObj));\n    },\n  };\n};\nexport default connect(null, mapDispatchToProps)(Home);\n","import React, { Component, Fragment } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { connect } from \"react-redux\";\nimport { deleteTasks } from \"../actions/delete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass Taskcard extends Component {\n  handleDelete = (taskTitle) => {\n    this.props.deleteTask(taskTitle);\n  };\n\n  AlertDialog = (title) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose3 = () => {\n      setOpen(false);\n    };\n\n    const handleClose2 = () => {\n      this.handleDelete(title.title);\n      setOpen(false);\n    };\n\n    return (\n      <div>\n        <IconButton aria-label=\"delete\" onClick={handleClickOpen}>\n          <DeleteIcon />\n        </IconButton>\n        <Dialog\n          open={open}\n          onClose={handleClose3}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Are you sure you want to delete \"+title.title+\" ?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Tasks once deleted cannot be recovered\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose2} color=\"primary\">\n              Delete\n              \n            </Button>\n            <Button onClick={handleClose3} color=\"primary\" autoFocus>\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  };\n\n\n  \n\n\n\n   \n  render() {\n    return (\n      <Fragment>\n        <Card className=\"root  \">\n          <CardActionArea>\n            <CardContent>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                className=\"text-center\"\n              >\n                {this.props.data.taskTitle}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <ul>\n                {this.props.data.taskDesc }</ul>\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <this.AlertDialog\n              title={this.props.data.taskTitle}\n            ></this.AlertDialog>\n          </CardActions>\n        </Card>\n      \n      </Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteTask: (taskTitle) => {\n      dispatch(deleteTasks(taskTitle));\n    },\n  };\n};\nexport default connect(null, mapDispatchToProps)(Taskcard);\n","export const deleteTasks=(taskTitle)=>{\n    return{\n        type:\"DELETE_TASK\",\n        taskTitle\n    }\n}","import React, { Component, Fragment } from \"react\";\nimport Taskcard from \"./card\";\nimport { connect } from \"react-redux\";\n\nclass Tasksbar extends Component {\n  render() {\n    const tasks = this.props;\n    console.log(tasks.existingTasks);\n    return (\n      <Fragment>\n        <div className=\"container2\">\n          <div className=\"row container3\">\n            {tasks.existingTasks &&\n              tasks.existingTasks.map((ele) => (\n                // <div>{console.log(ele._id)}</div>\n                <Taskcard key={ele._id} data={ele} />\n              ))}\n              {/* <div>\n              {\n                tasks.existingTasks?tasks.existingTasks.map((ele) => (\n                  // <div>{console.log(ele._id)}</div>\n                  <Taskcard key={ele._id} data={ele} />\n                )):<h1>There are no tasks currently. Click on Plus to create one</h1>\n              }</div> */}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    existingTasks: state.existingTasks,\n  };\n};\n\nexport default connect(mapStateToProps)(Tasksbar);\n","import React,{ Component, Fragment } from \"react\";\n\nexport default class Title extends Component{\n    render(){\n        return(\n            <Fragment ><div className=\"text-center\">\n                <h1 className=\"color0\">Tasker</h1>\n                <h6 className=\"color1\">Create tasks by pressing plus</h6>\n                <h6 className=\"color1\">and delete them by pressing delete</h6></div>\n            </Fragment>\n        )\n    }\n}","// export const new_tasks={\r\n//     taskType: \"notes\",\r\n//     taskTitle: \"task7\",\r\n//     taskDesc: [\"Bring milk ffdfcs fesr ewfsdf wesfr \"],\r\n//   }\r\n\r\n\r\n\r\n\r\n\r\n// class myObject  {\r\n//   constructor(name) {\r\n//     this.name = name;\r\n//   }\r\n// }\r\n// var e = new myObject(\"hello\");\r\n\r\nexport class new_tasks{\r\n  constructor(tt,td){\r\n    this.taskTitle=tt\r\n    this.taskDesc=td\r\n  }\r\n}\r\n\r\n\r\n// module.exports=new_tasks","export const addTaskAction=(taskObj)=>{\r\n    return{\r\n        type:\"ADD_TASK\",\r\n        content:taskObj\r\n    }\r\n}","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport Home from \"./Components/home.js\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Link,\n  Redirect,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <Fragment>\n          \n          <div>\n            <Switch>\n            <Route exact path=\"/\" component={Home} />\n            </Switch>\n          </div>\n        </Fragment>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  existingTasks: [\n    {\n      taskType: \"task\",\n      taskTitle: \"task1\",\n      taskDesc: [\n        \"Bring milk\",\n        \"bring oi8l\",\n        \"bring efoil\",\n        \"bring feoil\",\n        \"bring efefoil\",\n        \"bring esfsoil\",\n      ],\n    },\n    {\n      taskType: \"notes\",\n      taskTitle: \"task2\",\n      taskDesc: [\"Bring milk ffdfcs fesr ewfsdf wesfr \"],\n    },\n    {\n      taskType: \"notes\",\n      taskTitle: \"task3\",\n      taskDesc: [\"Bring milk ffdfcs fesr ewfsdf wesfr \"],\n    },\n    {\n      taskType: \"notes\",\n      taskTitle: \"task4\",\n      taskDesc: [\"Bring milk ffdfcs fesr ewfsdf wesfr \"],\n    },\n    {\n      taskType: \"notes\",\n      taskTitle: \"task5\",\n      taskDesc: [\"Bring milk ffdfcs fesr ewfsdf wesfr \"],\n    },{\n      taskType: \"notes\",\n      taskTitle: \"task6\",\n      taskDesc: [\"Bring milk ffdfcs fesr ewfsdf wesfr \"],\n    },\n    {\n      taskType: \"notes\",\n      taskTitle: \"task7\",\n      taskDesc: [\"Bring milk ffdfcs fesr ewfsdf wesfr \"],\n    }\n  ],\n};\n\nconst deletereducer = (state = initState, action) => {\n    \n    if(action.type==='DELETE_TASK'){\n        let newTasks=state.existingTasks.filter(task=>{\n            return action.taskTitle!== task.taskTitle\n        })\n\n        return{\n            ...state,\n            existingTasks:newTasks\n        }\n    }\n\n    if(action.type===\"ADD_TASK\"){\n      return {\n        ...state,\n        existingTasks:[...state. existingTasks,action.content]\n    }\n    }\n\n\n    return state\n};\n\nexport default deletereducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport deletereducer from \"./reducers/deleteReducer\"\nimport {loadState,saveState} from \"./localstorage\"\n\n// const persistedState=loadState()\n// const astore= createStore(deletereducer,persistedState)\nconst astore= createStore(deletereducer)\n\n\nastore.subscribe(()=>{\n  // saveState(astore.getState)\n  saveState({\n    existingTasks:astore.getState().existingTasks\n  })\n})\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={astore}>\n    <App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('state');\n      if (serializedState === null) {\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      return undefined;\n    }\n  }; \n  export const saveState = (state) => {\n    try {\n      const serializedState = JSON.stringify(state);\n      localStorage.setItem('state', serializedState);\n    } catch {\n      // ignore write errors\n    }\n  };"],"sourceRoot":""}